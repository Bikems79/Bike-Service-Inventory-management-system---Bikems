@page "/login"
@using System.Text.RegularExpressions
@using Bike_Service_IMS.Data;
@using System.Reflection;
@inject NavigationManager NavManager
@if(users.Count == 1)
{
    <div class="login-form">
        <MudText Typo="Typo.h5" Align="Align.Center" Class="fw-bold">First Login Details</MudText>
        <MudText Typo="Typo.h6" Align="Align.Center">Username: @UserServices.SeedUsername</MudText>
        <MudText Typo="Typo.h6" Align="Align.Center">Password: @UserServices.SeedPassword</MudText>
    </div>
}

<div class="login-form">
    <MudForm>
        <MudText Typo="Typo.h4" Align="Align.Center" Class="fw-bold mt-5">Login</MudText>
        <div class="content">
            <div class="input-field">
                <MudTextField Label="Username" @bind-Value="Username" />
            </div>
            <div class="input-field">
                <MudTextField Label="Password" @bind-Value="Password" InputType="InputType.Password"/>
            </div>
            @if (showError == true)
            {
                <MudAlert Severity="Severity.Error">@loginErrorMessage</MudAlert>
            }
            <MudButton OnClick="LoginUser" Variant="Variant.Filled" Color="Color.Primary" class="mt-3 justify-content-center">Login</MudButton>
        </div>
    </MudForm>
</div>

@code {
    bool showError = false;
    private string loginErrorMessage = "";
    private string Username { get; set; }
    private string Password { get; set; }
    private List<User> users { get; set; }
    [CascadingParameter]
    UserState userState { get; set; }
    protected override void OnInitialized()
    {
        users = UserServices.Read();
    }

    public void LoginUser()
    {
        try
        {
            userState.CurrentUser = UserServices.Login(Username, Password);
            if (users.Count == 1)
            {
                NavManager.NavigateTo("/users");
            }else
            {
                NavManager.NavigateTo("/home");
            }
            

        }
        catch (Exception e)
        {
            showError=true;
            loginErrorMessage = e.Message;
        }
    }
}
